name: CI Pipeline

on:
  push:
    branches:
      - main
      - stage
      - dev
  workflow_dispatch:

jobs:
  quality:
    name: 'Quality'
    runs-on: ubuntu-latest
    steps:
      - name: '‚öô Set up Node.js v4'
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'

      - name: '‚úÖ Checkout repository'
        uses: actions/checkout@v4

      - name: 'üíæ Restore packages from cache'
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: 'ü¶â GitGuardian scan'
        uses: GitGuardian/ggshield-action@master
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

      - name: 'üì¶ Install packages'
        run: npm install

      - name: 'üî¶ Build'
        run: npm run build

      - name: 'üíÖ Lint'
        run: npm run lint

      - name: 'üë®‚Äçüíª Run Test'
        run: npm run test:cov
        env:
          NODE_ENV: 'test'

      - name: 'üìä Publish Test Report'
        uses: mikepenz/action-junit-report@v4
        if: always()
        with:
          report_paths: '**/junit.xml'

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: Profitei/profitei-api

  check-changed:
    name: Test changed-files
    runs-on: ubuntu-latest
    outputs:
      changed-files-database: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v43
        with:
          files: |
            prisma/**
            .github/**
            k8s/database-job.yaml

  docker:
    name: Build and Push Docker
    runs-on: ubuntu-latest
    needs: quality
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: evmartinelli
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            evmartinelli/profitei:${{ github.sha }}
            evmartinelli/profitei:latest

  docker-database:
    name: Build and Push Docker Database
    runs-on: ubuntu-latest
    needs: [quality, check-changed]
    if: needs.check-changed.outputs.changed-files-database == 'true'
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: evmartinelli
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          file: ./Dockerfile.database
          platforms: linux/amd64,linux/arm64
          tags: |
            evmartinelli/profitei-db:${{ github.sha }}
            evmartinelli/profitei-db:latest

  update-k8s:
    name: Update K8S Configuration
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - uses: actions/checkout@v4
      - uses: imranismail/setup-kustomize@v2
      - name: update k8s
        run: |
          cd k8s
          kustomize edit set image evmartinelli/profitei:latest=evmartinelli/profitei:${{ github.sha }}
          cat kustomization.yaml
      - name: commit
        run: |          
          git config --global user.email "gh@action.com"
          git config --global user.name "GH Actions"
          git commit -am "Set 'profitei' image tag to '${{ github.sha }}'"
          git push

  execute-database:
    name: Run Database Migration
    needs: [quality, check-changed, docker-database]
    runs-on: ubuntu-latest
    if: needs.check-changed.outputs.changed-files-database == 'true'
    steps:
      - uses: actions/checkout@v4
      - name: Connect to Kubernetes cluster
        uses: azure/k8s-set-context@v4
        with:
          kubeconfig: ${{ secrets.KUBECONFIG }}
      - name: Run database migration
        run: |
          kubectl apply -f k8s/database-job.yaml
